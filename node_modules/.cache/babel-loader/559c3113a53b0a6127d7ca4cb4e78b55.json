{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Projects\\\\TASK_02\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport Navbar from '../components/Navigation/Navigation';\nimport Loader from './loader';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); //defining the states\n\n    _this.onButtonSubmit = function () {\n      //changes the state of the button is clicked\n      _this.setState({\n        isButtonClicked: !_this.isButtonClicked\n      });\n\n      var timer = setTimeout(function () {\n        //fetches the api which is provided in letsgrowmore\n        fetch('https://reqres.in/api/users?page=1').then(function (response) {\n          return response.json();\n        }).then(function (users) {\n          _this.setState({\n            robots: users.data\n          });\n        });\n      }, 2000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    };\n\n    _this.onSearchChange = function (event) {\n      _this.setState({\n        searchfeild: event.target.value\n      });\n    };\n\n    _this.state = {\n      robots: [],\n      searchfeild: '',\n      isButtonClicked: false\n    };\n    return _this;\n  } //function when the button is clicked .\n  //it fetches the api\n  //and stores in robots\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //used to filter the robots bt their first name\n      var filteredRobots = this.state.robots.filter(function (robots) {\n        return robots.first_name.toLowerCase().includes(_this2.state.searchfeild.toLowerCase());\n      }); //at the starting\n      //when the user has not clicked the button\n      //and the api is not fetched\n\n      if (this.state.robots.length === 0 && this.state.isButtonClicked === false) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n          onButtonSubmit: this.onButtonSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"tc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, \"Click on \\\"GET USERS\\\" for getting user details\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 81\n          }\n        }, \"By\")), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, \"By clicking on it you will get Users list of LGM\"));\n      } //when the button is clicked and the api is being called\n      //but no data is fetched\n      else if (this.state.robots.length === 0) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n            onButtonSubmit: this.onButtonSubmit,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"tc\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }\n          }, \"Loading...\"), /*#__PURE__*/React.createElement(Loader, {\n            className: \"loader\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }\n          }));\n        } //when the button is clicked and the api has fetched data\n        else {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n              onButtonSubmit: this.onButtonSubmit,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"tc\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }\n            }, \"User Details\"), /*#__PURE__*/React.createElement(Scroll, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CardList, {\n              robots: filteredRobots,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }\n            }))));\n          }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Projects/TASK_02/src/containers/App.js"],"names":["React","Component","CardList","Scroll","Navbar","Loader","App","onButtonSubmit","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","robots","data","clearTimeout","onSearchChange","event","searchfeild","target","value","state","filteredRobots","filter","first_name","toLowerCase","includes","length"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport Navbar from '../components/Navigation/Navigation';\r\nimport Loader from './loader';\r\n\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        //defining the states\r\n        this.state={\r\n            robots: [],\r\n            searchfeild: '',\r\n            isButtonClicked: false\r\n        }\r\n    }\r\n\r\n    //function when the button is clicked .\r\n    //it fetches the api\r\n    //and stores in robots\r\n    onButtonSubmit = () => {\r\n        //changes the state of the button is clicked\r\n        this.setState({isButtonClicked: !this.isButtonClicked})\r\n        const timer = setTimeout(() => {\r\n            //fetches the api which is provided in letsgrowmore\r\n            fetch('https://reqres.in/api/users?page=1').then(response=> {\r\n            return response.json();\r\n            })\r\n            .then(users=>{\r\n                this.setState({robots: users.data})\r\n            });\r\n        }, 2000);\r\n        return () =>clearTimeout(timer);\r\n    }\r\n\r\n    //function used to change the searchfield\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfeild: event.target.value})\r\n    }\r\n\r\n    render(){\r\n\r\n        //used to filter the robots bt their first name\r\n        const filteredRobots = this.state.robots.filter(robots=>{\r\n            return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\r\n        })\r\n\r\n        //at the starting\r\n        //when the user has not clicked the button\r\n        //and the api is not fetched\r\n        if(this.state.robots.length === 0 && this.state.isButtonClicked === false){\r\n            return (\r\n              <>\r\n                <Navbar onButtonSubmit={this.onButtonSubmit}/>\r\n                <h1 className='tc'>Click on \"GET USERS\" for getting user details<br>By</br></h1>\r\n                <h3>By clicking on it you will get Users list of LGM</h3>\r\n              </>\r\n            );\r\n\r\n        }\r\n\r\n        //when the button is clicked and the api is being called\r\n        //but no data is fetched\r\n        else if(this.state.robots.length === 0){\r\n            return (\r\n                <>\r\n                  <Navbar onButtonSubmit={this.onButtonSubmit}/>\r\n                  <h1 className='tc'>Loading...</h1>\r\n                  <Loader className='loader'></Loader>\r\n                </>\r\n              );\r\n        }\r\n\r\n        //when the button is clicked and the api has fetched data\r\n        else{\r\n            return(\r\n                <>\r\n                  <Navbar onButtonSubmit={this.onButtonSubmit}/>\r\n                  <div className='tc'>\r\n                      <h1>User Details</h1>\r\n                      <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                      </Scroll>\r\n                  </div>\r\n                 </>\r\n              );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}